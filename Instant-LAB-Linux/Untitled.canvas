{
	"nodes":[
		{"id":"2413aa8d128aba68","type":"file","file":"Pasted image 20250315195154.png","x":-260,"y":-60720,"width":2180,"height":1201},
		{"id":"7b13888c6d8e6c2d","type":"file","file":"Pasted image 20250315195415.png","x":-260,"y":-59400,"width":1580,"height":860},
		{"id":"47dcd646f663f068","type":"file","file":"Pasted image 20250315195747.png","x":-260,"y":-58480,"width":2073,"height":920},
		{"id":"fe9a9ec75c141f79","type":"text","text":"**NMAP ENUMERATION**","x":-260,"y":-59460,"width":260,"height":60},
		{"id":"c36e6e9557ce5b20","type":"text","text":"I click the \"Download now\" which give us a APK file","x":-260,"y":-57560,"width":500,"height":80},
		{"id":"06f0b0abe90df5a8","type":"file","file":"Pasted image 20250315202146.png","x":-260,"y":-57380,"width":1700,"height":654},
		{"id":"c9ca9df54cf4f2ee","type":"file","file":"Pasted image 20250315202220.png","x":-260,"y":-56726,"width":1700,"height":825},
		{"id":"2e07249582d3076f","type":"file","file":"Pasted image 20250315202410.png","x":-260,"y":-55840,"width":1700,"height":1015},
		{"id":"1ff96cde11572862","type":"file","file":"Pasted image 20250315202503.png","x":-260,"y":-54680,"width":1700,"height":1120},
		{"id":"101dcddc29a1f3b1","type":"text","text":"We've uploaded the APK FILE","x":-260,"y":-53560,"width":300,"height":79},
		{"id":"b418edcb88b5caec","type":"file","file":"Pasted image 20250315202605.png","x":-260,"y":-53400,"width":1362,"height":924},
		{"id":"b8f75fb582b8057d","type":"file","file":"Pasted image 20250315203002.png","x":-260,"y":-52320,"width":1700,"height":617},
		{"id":"ede8c5de2492aae5","type":"text","text":"the file is fully analyzed and the page is a beautiful UI with loads of data to parse through. Scrolling through MSF “Possible Hardcoded Secrets”.","x":-260,"y":-52440,"width":861,"height":79},
		{"id":"3a6a1c466baf0c21","type":"file","file":"Pasted image 20250315203736.png","x":-260,"y":-51477,"width":1700,"height":642},
		{"id":"f073b01a85cd27b7","type":"text","text":"All files under Code Analysis also includes APIs that perform a variety of functions.","x":-260,"y":-51560,"width":453,"height":83},
		{"id":"8759ee86a60c7cd9","type":"file","file":"Pasted image 20250315203830.png","x":-260,"y":-50835,"width":1700,"height":921},
		{"id":"f7af9ee0eda85ddf","type":"file","file":"Pasted image 20250315204422.png","x":-260,"y":-49634,"width":1340,"height":277},
		{"id":"2b54764bb89f1bbb","type":"text","text":"Next, I proceeded to decode the token to reveal it’s contents. A number of tools and Burp extensions can do this but I chose jwt.io.","x":-260,"y":-49914,"width":555,"height":74},
		{"id":"8acca53732950e36","type":"text","text":"I added this subdomain to /etc/hosts/ right next to the instant.htb domain so I can access it in the browser. The entry should look like this: 10.10.11.37 instant.htb swagger-ui.instant.htb","x":-260,"y":-49357,"width":897,"height":102},
		{"id":"721d367626339836","type":"file","file":"Pasted image 20250315204654.png","x":-260,"y":-49140,"width":1700,"height":957},
		{"id":"ec8904111f80518b","type":"file","file":"Pasted image 20250315204750.png","x":-260,"y":-48183,"width":1700,"height":923},
		{"id":"db0eb27709d2896a","type":"text","text":"After Authorizing, the first API that I tried out (click Try it out and Execute) first was /api/v1/admin/list/users to enumerate who are the users on the machine. Results revealed two users: instantAdmin and shirohige.","x":-260,"y":-47260,"width":717,"height":110},
		{"id":"28356fa50b89708a","type":"file","file":"Pasted image 20250315205118.png","x":-260,"y":-47040,"width":1700,"height":674},
		{"id":"7e289f7c471bb1c4","type":"file","file":"Pasted image 20250315205137.png","x":-260,"y":-46366,"width":1700,"height":1098},
		{"id":"df10cbfbec072086","type":"text","text":"After, I tested each API but noticed something interesting about the /api/v1/admin/view/logs API. The output is a log file from a log folder in shirohige’s home directory. This indicates there is a possible path traversal vulnerability here.","x":-260,"y":-45268,"width":657,"height":142},
		{"id":"a8d0ae4299be25b5","type":"text","text":"**EXPLOITING THE VULNERABILITY**","x":-260,"y":-45020,"width":307,"height":60},
		{"id":"15216a657996b74c","type":"file","file":"Pasted image 20250315211307.png","x":-260,"y":-44940,"width":1700,"height":925},
		{"id":"0c82efe644395b50","type":"file","file":"Pasted image 20250315211347.png","x":-260,"y":-43940,"width":1700,"height":933},
		{"id":"c2d021fd0f82b8ae","type":"text","text":"Entering the 1.log file display it’s contents.","x":-265,"y":-43007,"width":327,"height":68},
		{"id":"29644537f544050c","type":"file","file":"Pasted image 20250315211612.png","x":-265,"y":-42840,"width":1705,"height":966},
		{"id":"82c5ca3956e2983d","type":"text","text":"Typical testing of a path traversal vulnerability involves checking to see if the sensitive /etc/passwd file is readable.","x":-265,"y":-41896,"width":367,"height":100},
		{"id":"b3614803a6db60f2","type":"file","file":"Pasted image 20250315211700.png","x":-265,"y":-41700,"width":1667,"height":783},
		{"id":"886c7a58eb319fc3","type":"text","text":"Since shirohige is the only confirmed user on this machine and it’s possible to read any file they own, getting the user flag is simple using ../../../home/shirohige/user.txt","x":-571,"y":-40860,"width":251,"height":35},
		{"id":"586fdea731cac36c","type":"file","file":"Pasted image 20250315211811.png","x":-265,"y":-40917,"width":1667,"height":655},
		{"id":"9611efcc492a406f","type":"file","file":"Pasted image 20250315213051.png","x":-265,"y":-40160,"width":1668,"height":871,"color":"4"},
		{"id":"c87506204eabc69b","type":"text","text":"we got the first flag","x":-265,"y":-39289,"width":225,"height":50,"color":"4"},
		{"id":"10c2aaba3474457f","type":"text","text":"## Privilege Escalation","x":-265,"y":-39160,"width":314,"height":71},
		{"id":"b0e1b5b7e699bc3b","type":"text","text":"The Nmap scan earlier on revealed that only ports 22 and 80 were open. Using the LFI vulnerability, I was able to read the SSH key files for shirohige.","x":-265,"y":-39089,"width":626,"height":110},
		{"id":"6be5ef43d02b3747","type":"file","file":"Pasted image 20250315213254.png","x":-266,"y":-38979,"width":1669,"height":1034},
		{"id":"aec14d987c5c5a53","type":"text","text":"we got the id_rsa of shirohige","x":-266,"y":-37945,"width":346,"height":50},
		{"id":"86038e3b4d48b0f1","type":"file","file":"Pasted image 20250315214624.png","x":-266,"y":-37820,"width":1669,"height":471},
		{"id":"3fc57866de4775d1","type":"text","text":"we used the id_rsa and we are in","x":-266,"y":-37349,"width":326,"height":50},
		{"id":"bcd7f32ee20a2067","type":"file","file":"Pasted image 20250315214847.png","x":-266,"y":-37240,"width":835,"height":422},
		{"id":"728dcac765e5abd3","type":"text","text":"I stumbled onto the /opt directory that held a backups folder. In the backups folder was a Solar-PuTTY folder with a sessions.-backup.dat file.","x":-266,"y":-36818,"width":472,"height":112},
		{"id":"2bc73ed169eedd3b","type":"text","text":"Backup files can contain credentials so I set up a python (confirmed the box has python3 installed using python3command) server from the Solar-PuTTY folder so I can download the file to my working directory in Kali.","x":-266,"y":-36706,"width":626,"height":104},
		{"id":"b3277ac1f3220d10","type":"file","file":"Pasted image 20250315215039.png","x":-266,"y":-36560,"width":1669,"height":929},
		{"id":"6e5d35f4a5c1ede7","type":"text","text":"Running nano the file was not in a human readable format due to encryption. I turned to Google again where I found the Solar-PuTTYCracker.py tool which is used to decrypt SolarPuTTY file. I downloaded the script and moved it to my working directory. After, I ran the command python3 SolarPuttyCracker.py -w /usr/share/wordlists/john.lst sessions-backup.dat -o /home/chryber/HTB/Instant/cracked.txt -v using the wordlist from the JohntheRipper tool and outputting the data to the cracked.txt file.","x":-266,"y":-35600,"width":706,"height":191},
		{"id":"7b0857faaf7326c6","type":"file","file":"Pasted image 20250315221851.png","x":-266,"y":-35409,"width":1386,"height":545},
		{"id":"f5dfb84c14c8e51b","type":"file","file":"Pasted image 20250315222007.png","x":-266,"y":-34800,"width":1386,"height":943},
		{"id":"4326824f5ea22dec","type":"text","text":"now we got credentials","x":-266,"y":-33820,"width":246,"height":57},
		{"id":"b35252710a2bca0c","type":"file","file":"Pasted image 20250315222142.png","x":-266,"y":-33763,"width":986,"height":220},
		{"id":"444a0c7ff30c4e24","type":"text","text":"Back to shirohige’s SSH session, I ran su root and entered the password from the decrypted file which was a success.","x":-266,"y":-33543,"width":666,"height":100},
		{"id":"1b17c013b0f3eb02","type":"file","file":"Pasted image 20250315222343.png","x":-266,"y":-33394,"width":986,"height":412,"color":"4"},
		{"id":"ddfdabff966e1d76","type":"text","text":"Final flag","x":-266,"y":-32982,"width":146,"height":62,"color":"4"},
		{"id":"575f69f707ea6bfe","type":"file","file":"Pasted image 20250315222258.png","x":-266,"y":-32880,"width":1009,"height":920},
		{"id":"ec1cbee2fb4a9d19","type":"text","text":"I gained valuable insights into tools like MobSF and AKTool while enhancing my reverse engineering skills. This box emphasized the risks of hardcoded sensitive data and the need for secure APIs that don’t blindly trust user input.","x":-51,"y":-31880,"width":579,"height":122,"color":"4"}
	],
	"edges":[
		{"id":"62cfdfd54d0e288b","fromNode":"886c7a58eb319fc3","fromSide":"bottom","toNode":"586fdea731cac36c","toSide":"left"},
		{"id":"448e23c0edb9e46c","fromNode":"9611efcc492a406f","fromSide":"left","toNode":"c87506204eabc69b","toSide":"left"},
		{"id":"8b5f0239d4fa2daa","fromNode":"1b17c013b0f3eb02","fromSide":"left","toNode":"ddfdabff966e1d76","toSide":"left"},
		{"id":"63b7c1531847e00a","fromNode":"575f69f707ea6bfe","fromSide":"bottom","toNode":"ec1cbee2fb4a9d19","toSide":"top"}
	]
}